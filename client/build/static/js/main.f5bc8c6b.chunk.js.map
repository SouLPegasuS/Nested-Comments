{"version":3,"sources":["components/Navbar.jsx","pages/Login.jsx","pages/Register.jsx","components/Comment.jsx","pages/Post.jsx","App.jsx","index.js"],"names":["Navbar","logout","a","axios","post","window","location","console","log","className","id","type","to","style","cursor","onClick","Login","useState","username","setUsername","password","setPassword","message","setMessage","add","data","then","response","status","catch","err","value","onChange","e","target","placeholder","autoComplete","width","required","Register","Comment","props","editClicked","setEditClicked","replyClicked","setReplyClicked","replyInput","setReplyInput","editInput","setEditInput","comment","commentData","date","Date","postedDate","toLocaleString","replyActionsStyle","backgroundColor","margin","lineHeight","color","marginBottom","marginleft","depth","marginLeft","Typography","float","variant","component","author","name","Input","multiline","rowsMin","maxRows","commentText","isLogged","userData","Button","size","_id","updateComment","saveEdit","disabled","parentComment","addComment","useStyles","makeStyles","theme","root","maxWidth","expand","transform","transition","transitions","create","duration","shortest","Post","classes","React","expanded","setExpanded","comments","setComments","setIsLogged","setUserData","commentInput","setCommentInput","getComments","threads","baseComments","DFS","thread","commentsArray","parentId","child","push","children","useEffect","get","user","getData","isReplyComment","Card","CardHeader","title","CardContent","CardActions","disableSpacing","IconButton","clsx","expandOpen","Collapse","in","timeout","unmountOnExit","marginTop","map","index","App","exact","path","createTheme","typography","fontFamily","join","ReactDOM","render","ThemeProvider","document","getElementById"],"mappings":"sOAqDeA,EAjDA,WAEb,IAAMC,EAAM,uCAAG,sBAAAC,EAAA,+EAELC,IAAMC,KAAK,iBAFN,OAGXC,OAAOC,SAAW,SAHP,+CAMXC,QAAQC,IAAR,MANW,wDAAH,qDAUZ,OAAO,qBAAKC,UAAU,cAAf,SACL,sBAAKA,UAAU,4DAA4DC,GAAG,MAA9E,UACE,wBAAQC,KAAK,SAASF,UAAU,iBAAiB,cAAY,WAAW,cAAY,kBAApF,SACE,sBAAMA,UAAU,sBAAhB,iBAEF,qBAAKA,UAAU,2BAA2BC,GAAG,iBAA7C,SACE,sBAAKD,UAAU,aAAf,UACE,cAAC,IAAD,CAAMG,GAAI,IAAV,SACE,sBACEH,UAAW,mCADb,oBAKF,cAAC,IAAD,CAAMG,GAAG,SAAT,SACE,sBACEH,UAAW,mCADb,qBAKF,cAAC,IAAD,CAAMG,GAAG,YAAT,SACE,sBACEH,UAAW,mCADb,wBAKF,sBACEI,MAAO,CAAEC,OAAQ,WACjBC,QAASd,EACTQ,UAAW,kCAHb,+BC2CKO,EA9ED,WAEV,MAAgCC,mBAAS,IAAzC,mBAAOC,EAAP,KAAiBC,EAAjB,KACA,EAAgCF,mBAAS,IAAzC,mBAAOG,EAAP,KAAiBC,EAAjB,KACA,EAA8BJ,mBAAS,IAAvC,mBAAOK,EAAP,KAAgBC,EAAhB,KAEMC,EAAG,uCAAG,4BAAAtB,EAAA,yDACM,KAAXgB,GAA4B,KAAXE,EADZ,uBAEJG,EAAW,kCAFP,iCAKJE,EAAO,CACPP,SAAUA,EACVE,SAAUA,GAPN,SASFjB,IAAMC,KAAK,eAAgBqB,GAChCC,MAAM,SAAAC,GACuB,MAAvBA,EAASF,KAAKG,OACbvB,OAAOC,SAAW,IAGlBiB,EAAW,qCAGlBM,OAAO,SAAAC,GACJvB,QAAQC,IAAIsB,GACZP,EAAW,qCApBP,2CAAH,qDAwBT,OACI,gCACI,cAAC,EAAD,IACA,sBAAKd,UAAU,gCAAf,UACI,oBAAIA,UAAU,OAAd,qCACA,8BACI,uBACIE,KAAK,QACLoB,MAAOb,EACPc,SAAU,SAACC,GAAD,OAAOd,EAAYc,EAAEC,OAAOH,QACtCI,YAAY,WACZC,aAAa,MACbvB,MAAO,CAAEwB,MAAO,SAChB5B,UAAU,2BACV6B,UAAQ,MAGhB,8BACI,uBACI3B,KAAK,WACLoB,MAAOX,EACPY,SAAU,SAACC,GAAD,OAAOZ,EAAYY,EAAEC,OAAOH,QACtCI,YAAY,WACZtB,MAAO,CAAEwB,MAAO,SAChB5B,UAAU,2BACV6B,UAAQ,MAGhB,8BACI,wBAAQvB,QAAS,kBAAMS,KAAOf,UAAU,yBAAxC,uBAEJ,sCACA,8BACI,cAAC,IAAD,CAAMG,GAAG,YAAT,SACI,sBACIH,UAAU,oBADd,0BAMR,qBAAKA,UAAU,OAAf,SACI,kCAAKa,EAAL,gBCaLiB,EApFE,WAEb,MAAgCtB,mBAAS,IAAzC,mBAAOC,EAAP,KAAiBC,EAAjB,KACA,EAAgCF,mBAAS,IAAzC,mBAAOG,EAAP,KAAiBC,EAAjB,KACA,EAA8BJ,mBAAS,IAAvC,mBAAOK,EAAP,KAAgBC,EAAhB,KAEMC,EAAG,uCAAG,4BAAAtB,EAAA,yDACM,KAAXgB,GAA4B,KAAXE,EADZ,uBAEJG,EAAW,wCAFP,iCAKJE,EAAO,CACPP,SAAUA,EACVE,SAAUA,GAPN,SASFjB,IAAMC,KAAK,kBAAmBqB,GACnCC,MAAM,SAAAC,GAEuB,MAAvBA,EAASF,KAAKG,OACbvB,OAAOC,SAAW,IAGQ,MAAvBqB,EAASF,KAAKG,OACbL,EAAW,kCAGXA,EAAW,qCAItBM,OAAO,SAAAC,GACJvB,QAAQC,IAAIsB,GACZP,EAAW,qCA1BP,2CAAH,qDA8BT,OACI,gCACI,cAAC,EAAD,IACA,sBAAKd,UAAU,gCAAf,UACI,oBAAIA,UAAU,OAAd,qCACA,8BACI,uBACIE,KAAK,QACLoB,MAAOb,EACPc,SAAU,SAACC,GAAD,OAAOd,EAAYc,EAAEC,OAAOH,QACtCI,YAAY,WACZC,aAAa,MACbvB,MAAO,CAAEwB,MAAO,SAChB5B,UAAU,2BACV6B,UAAQ,MAGhB,8BACI,uBACI3B,KAAK,WACLoB,MAAOX,EACPY,SAAU,SAACC,GAAD,OAAOZ,EAAYY,EAAEC,OAAOH,QACtCI,YAAY,WACZtB,MAAO,CAAEwB,MAAO,SAChB5B,UAAU,2BACV6B,UAAQ,MAGhB,8BACI,wBAAQvB,QAAS,kBAAMS,KAAOf,UAAU,yBAAxC,0BAEJ,sCACA,8BACI,cAAC,IAAD,CAAMG,GAAG,SAAT,SACI,sBACIH,UAAU,oBADd,uBAMR,qBAAKA,UAAU,OAAf,SACI,kCAAKa,EAAL,gB,wGCmDLkB,EAnIC,SAACC,GACb,MAAsCxB,oBAAS,GAA/C,mBAAOyB,EAAP,KAAoBC,EAApB,KACA,EAAwC1B,oBAAS,GAAjD,mBAAO2B,EAAP,KAAqBC,EAArB,KACA,EAAoC5B,mBAAS,IAA7C,mBAAO6B,EAAP,KAAmBC,EAAnB,KACA,EAAkC9B,mBAAS,IAA3C,mBAAO+B,EAAP,KAAkBC,EAAlB,KA6CIC,EAAUT,EAAMU,YACdC,EAAO,IAAIC,KAAKH,EAAQI,YAAYC,iBACpCC,EAAoB,CAACC,gBAAiB,UAAWC,OAAQ,cAAeC,WAAY,IAAKC,MAAO,UAAWC,aAAc,UACzHC,EAA+B,IAAjBZ,EAAQa,MAAM,GAAM,IACxC,OACI,sBAAKtD,UAAU,iBAAiBI,MAAO,CAACmD,WAAYF,GAApD,UACQ,sBAAKrD,UAAU,iBAAf,UACA,eAACwD,EAAA,EAAD,CAAYpD,MAAO,CAACqD,MAAO,OAAQN,MAAO,WAAYO,QAAQ,QAAQC,UAAU,IAAhF,UACKlB,EAAQmB,OAAOC,KADpB,OAGA,cAACL,EAAA,EAAD,CAAYpD,MAAO,CAACqD,MAAO,QAASN,MAAO,WAAYO,QAAQ,QAAQC,UAAU,IAAjF,SACKhB,OAGL,sBAAK3C,UAAU,kBAAf,UACKiC,EACG,cAAC6B,EAAA,EAAD,CACIxC,MAAOiB,EACPwB,WAAS,EAACC,QAAQ,IAAIC,QAAQ,IAC9BvC,YAAY,uBACZtB,MAAO,CAACwB,MAAO,OAAQuB,MAAO,SAC9B5B,SAjDP,SAACC,GACdgB,EAAahB,EAAEC,OAAOH,UAkDN,cAACkC,EAAA,EAAD,CAAYxD,UAAU,eAAe0D,QAAQ,QAAQC,UAAU,IAA/D,SACKlB,EAAQyB,cAGjB,sBAAKlE,UAAU,kBAAf,UACKgC,EAAMmC,UAAY1B,EAAQmB,OAAO3D,KAAO+B,EAAMoC,SAASnE,GACpD,cAACoE,EAAA,EAAD,CACIC,KAAK,QACLnB,MAAM,UACNO,QAAQ,YACRtD,MAAO,CAAC4C,gBAAiB,UAAWG,MAAO,WAC3C7C,QAAS2B,EAAc,kBAxElC,SAACQ,GACd,IAAIzB,EAAO,CACPf,GAAIwC,EAAQ8B,IACZL,YAAa3B,GAEjBP,EAAMwC,cAAcxD,GACpBkB,GAAe,GACfM,EAAa,IAiEwCiC,CAAShC,IAAW,kBA7ExDyB,EA6E0EzB,EAAQyB,YA5EnGhC,GAAe,QACfM,EAAa0B,GAFG,IAACA,GAwEG,SAOKjC,EAAc,OAAS,SAChB,GAEhB,cAACoC,EAAA,EAAD,CACIC,KAAK,QACLI,SAAUjC,EAAQa,OAASrB,EAAc,EAAI,GAC7CkB,MAAM,UACNO,QAAQ,YACRtD,MAAO,CAAC4C,gBAAiB,UAAWG,MAAO,WAC3C7C,QAAS2B,EArEd,WACfC,GAAe,GACfM,EAAa,KAGM,WACnBJ,GAAgB,IAyDA,SAQKH,EAAc,SAAW,gBAIrCE,EACD,sBAAKnC,UAAU,cAAf,UACI,cAAC8D,EAAA,EAAD,CACIxC,MAAOe,EACP0B,WAAS,EAACC,QAAQ,IAAIC,QAAQ,IAC9BS,UAAW1C,EAAMmC,SACjBzC,YAAcM,EAAMmC,SAAgC,qBAArB,mBAC/B/D,MAAO,CAACwB,MAAO,OAAQuB,MAAO,SAC9B5B,SA1EF,SAACC,GACfc,EAAcd,EAAEC,OAAOH,UA0EX,sBAAKtB,UAAU,iBAAf,UACI,cAACqE,EAAA,EAAD,CACIK,UAAW1C,EAAMmC,SACjBG,KAAK,QAAQnB,MAAM,UACnBO,QAAQ,YACRtD,MAAO2C,EACPzC,QAAS,kBAxEZqE,EAwE8BlC,EAvE/CT,EAAM4C,YAAW,EAAMD,EAAetC,GACtCD,GAAgB,QAChBE,EAAc,IAHE,IAACqC,GAmED,oBAQA,cAACN,EAAA,EAAD,CACIC,KAAK,QAAQnB,MAAM,UACnBO,QAAQ,YACRtD,MAAO2C,EACPzC,QApFJ,WAChB8B,GAAgB,GAChBE,EAAc,KA8EE,0BAQC,OCrHnBuC,EAAYC,aAAW,SAACC,GAAD,MAAY,CACrCC,KAAM,CACFC,SAAU,OACVjC,gBAAiB,UACjBG,MAAO,SAEX+B,OAAQ,CACJC,UAAW,eACX5B,WAAY,OACZ6B,WAAYL,EAAMM,YAAYC,OAAO,YAAa,CAC9CC,SAAUR,EAAMM,YAAYE,SAASC,gBA6KlCC,EAxKF,WACT,IAAMC,EAAUb,IAChB,EAAgCc,IAAMnF,UAAS,GAA/C,mBAAOoF,EAAP,KAAiBC,EAAjB,KAKA,EAAgCrF,mBAAS,IAAzC,mBAAOsF,EAAP,KAAiBC,EAAjB,KACA,EAAgCvF,oBAAS,GAAzC,mBAAO2D,EAAP,KAAiB6B,EAAjB,KACA,EAAgCxF,mBAAS,IAAzC,mBAAO4D,EAAP,KAAiB6B,EAAjB,KACA,EAAwCzF,mBAAS,IAAjD,mBAAO0F,EAAP,KAAqBC,EAArB,KAEMC,EAAW,uCAAG,WAAOC,GAAP,mBAAA5G,EAAA,sDAoBhB,IAAQ6G,KAnBFC,EAAM,SAANA,EAAOC,EAAQC,GACjB,IAAIhE,EAAU,CACV8B,IAAKiC,EAAOjC,IACZX,OAAQ,CACJ3D,GAAIuG,EAAO5C,OAAO3D,GAClB4D,KAAM2C,EAAO5C,OAAOC,MAExBK,YAAasC,EAAOtC,YACpBZ,MAAOkD,EAAOlD,MACdoD,SAAUF,EAAOE,SACjB7D,WAAY2D,EAAO3D,YAIvB,IAAI,IAAI8D,KAFRF,EAAcG,KAAKnE,GAEF+D,EAAOK,SACpBN,EAAIC,EAAOK,SAASF,GAAQF,IAGhCA,EAAgB,GACIJ,EACpBE,EAAIF,EAAQC,GAAeG,GAE/BV,EAAYU,GACZN,EAAgB,IAxBA,2CAAH,sDA2BjBW,qBAAU,YACO,uCAAG,sBAAArH,EAAA,sEACNC,IAAMqH,IAAI,iBACf9F,MAAM,SAAAC,GAEH+E,EAAY/E,EAASF,KAAKgG,MACL,OAArB9F,EAASF,KAAKgG,KAAchB,GAAY,GAASA,GAAY,GAC7DI,EAAYlF,EAASF,KAAK8E,aAE7B1E,OAAM,SAAAC,GACHvB,QAAQC,IAAIsB,MATJ,2CAAH,qDAYb4F,KACD,IAEH,IAIMrC,EAAU,uCAAG,8CAAAnF,EAAA,yDAAOyH,EAAP,gCAA6BvC,EAA7B,+BAA2C,KAAMT,EAAjD,+BAA6D,MACrD,IAAnBgD,GAA6C,KAAjBhB,EADjB,qDAIXgB,GAAkC,KAAhBhD,EAJP,wDAOXlD,EAAO,CACPf,GAAImE,EAASnE,GACb4D,KAAMO,EAASP,KACfK,YAAagD,EAAiBhD,EAAcgC,GAE7CgB,IACClG,EAAK0F,SAAW/B,EAAcJ,IAC9BvD,EAAKsC,MAAQqB,EAAcrB,MAAM,GAdtB,UAkBT5D,IAAMC,KAAK,gBAAiBqB,GACjCC,MAAM,SAAAC,GAEH+E,EAAY/E,EAASF,KAAKgG,MACL,OAArB9F,EAASF,KAAKgG,KAAchB,GAAY,GAASA,GAAY,GAC7DI,EAAYlF,EAASF,KAAK8E,aAE7B1E,OAAO,SAAAC,GACJvB,QAAQC,IAAIsB,MA1BD,4CAAH,qDA8BVmD,EAAa,uCAAG,WAAOxD,GAAP,SAAAvB,EAAA,sEACZC,IAAMC,KAAK,iBAAkBqB,GAClCC,MAAM,SAAAC,GAEH+E,EAAY/E,EAASF,KAAKgG,MACL,OAArB9F,EAASF,KAAKgG,KAAchB,GAAY,GAASA,GAAY,GAC7DI,EAAYlF,EAASF,KAAK8E,aAE7B1E,OAAO,SAAAC,GACJvB,QAAQC,IAAIsB,MATE,2CAAH,sDAanB,OACI,gCACI,cAAC,EAAD,IACA,eAAC8F,EAAA,EAAD,CAAMnH,UAAW0F,EAAQV,KAAzB,UACI,cAACoC,EAAA,EAAD,CACIpH,UAAU,cACVqH,MAAM,wCAEV,cAACC,EAAA,EAAD,CAAatH,UAAU,cAAvB,SACI,cAACwD,EAAA,EAAD,CAAYE,QAAQ,KAAKC,UAAU,IAAnC,SAhIF,saAoIF,cAAC4D,EAAA,EAAD,CAAaC,gBAAc,EAA3B,SACI,cAACC,EAAA,EAAD,CACIzH,UAAW0H,YAAKhC,EAAQR,OAAT,eACVQ,EAAQiC,WAAa/B,IAE1BtF,QArHM,WACtBuF,GAAaD,IAqHG,gBAAeA,EACf,aAAW,YANf,SAQI,cAACpC,EAAA,EAAD,CAAYpD,MAAO,CAAC+C,MAAO,WAAYO,QAAQ,QAAQC,UAAU,IAAjE,0BAGR,cAACiE,EAAA,EAAD,CAAUC,GAAIjC,EAAUkC,QAAQ,OAAOC,eAAa,EAApD,SACI,eAACT,EAAA,EAAD,WACI,gCACI,cAACxD,EAAA,EAAD,CACIxC,MAAO4E,EACPxB,UAAWP,EACXJ,WAAS,EAACC,QAAQ,IAAIC,QAAQ,IAC9BvC,YAAcyC,EAAgC,uBAArB,mBACzB/D,MAAO,CAACwB,MAAO,OAAQuB,MAAO,SAC9B5B,SAjFR,SAACC,GACjB2E,EAAgB3E,EAAEC,OAAOH,UAiFL,cAAC+C,EAAA,EAAD,CACIC,KAAK,QACLI,UAAWP,EACXhB,MAAM,UACNO,QAAQ,YACRtD,MAAO,CAAC4C,gBAAiB,UAAWgF,UAAW,KAAM7E,MAAM,SAC3D7C,QAAS,kBAAIsE,GAAW,EAAM,KAAK,OANvC,uBAWJ,8BACKkB,EAASmC,KAAK,SAACxF,EAASyF,GAAV,OACX,cAAC,EAAD,CAEIjI,GAAIwC,EAAQ8B,IACZK,WAAcA,EACdJ,cAAiBA,EACjB9B,YAAeD,EACf2B,SAAYA,EACZD,SAAYA,GANP+D,oBCjK1BC,EAXH,WACV,OACE,cAAC,IAAD,UACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOC,OAAK,EAACC,KAAO,IAAI1E,UAAa8B,IACrC,cAAC,IAAD,CAAO2C,OAAK,EAACC,KAAO,SAAS1E,UAAapD,IAC1C,cAAC,IAAD,CAAO6H,OAAK,EAACC,KAAO,YAAY1E,UAAa7B,UCP/CiD,EAAQuD,YAAY,CACtBC,WAAY,CACRC,WAAY,CAAC,0BAA0B,cAAcC,KAAK,QAIlEC,IAASC,OACL,cAACC,EAAA,EAAD,CAAe7D,MAAOA,EAAtB,SACI,cAAC,EAAD,MAEJ8D,SAASC,eAAe,W","file":"static/js/main.f5bc8c6b.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\n\r\nconst Navbar = () => {\r\n\r\n  const logout = async () => {\r\n    try {\r\n      await axios.post(\"/users/logout\");\r\n      window.location = \"/login\";\r\n    }\r\n    catch (err) {\r\n      console.log(err);\r\n    }\r\n  }\r\n\r\n  return <div className=\"text-center\">\r\n    <nav className=\"navbar navbar-expand-md navbar-light text-white fixed-top\" id=\"bar\">\r\n      <button type=\"button\" className=\"navbar-toggler\" data-toggle=\"collapse\" data-target=\"#navbarCollapse\">\r\n        <span className=\"navbar-toggler-icon\"> </span>\r\n      </button>\r\n      <div className=\"collapse navbar-collapse\" id=\"navbarCollapse\">\r\n        <div className=\"navbar-nav\">\r\n          <Link to={\"/\"}>\r\n            <span\r\n              className={\"nav-item nav-link active expand \"}>\r\n              Post\r\n            </span>\r\n          </Link>\r\n          <Link to=\"/login\">\r\n            <span\r\n              className={\"nav-item nav-link active expand \"}>\r\n              Login\r\n            </span>\r\n          </Link>\r\n          <Link to=\"/register\">\r\n            <span\r\n              className={\"nav-item nav-link active expand \"}>\r\n              Register\r\n            </span>\r\n          </Link>\r\n          <span\r\n            style={{ cursor: \"pointer\" }}\r\n            onClick={logout}\r\n            className={\"nav-item nav-link active expand\"}>\r\n            Logout\r\n          </span>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  </div>\r\n}\r\n\r\nexport default Navbar;","import React, { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport Navbar from \"../components/Navbar\";\r\n\r\n\r\nconst Login = () => {\r\n\r\n    const [username, setUsername] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const [message, setMessage] = useState(\"\");\r\n\r\n    const add = async () => {\r\n        if(username===\"\" || password===\"\"){\r\n            setMessage(\"Incorrect username or password\");\r\n            return;\r\n        }\r\n        let data = {\r\n            username: username,\r\n            password: password\r\n        }\r\n        await axios.post(\"/users/login\", data)\r\n        .then( response => {\r\n            if(response.data.status===201){\r\n                window.location = \"/\";\r\n            }\r\n            else{\r\n                setMessage(\"Incorrect username or password\");\r\n            }\r\n        })\r\n        .catch( err => {\r\n            console.log(err); ///////////////\r\n            setMessage(\"Incorrect username or password\");\r\n        })\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Navbar />\r\n            <div className=\"text-center up user-container\">\r\n                <h2 className=\"mt-5\"> Login to Your Account </h2>\r\n                <div>\r\n                    <input\r\n                        type=\"email\"\r\n                        value={username}\r\n                        onChange={(e) => setUsername(e.target.value)}\r\n                        placeholder=\"Username\"\r\n                        autoComplete=\"off\"\r\n                        style={{ width: \"300px\" }}\r\n                        className=\"mt-3 pt-2 pb-2 pr-2 pl-2\"\r\n                        required\r\n                    />\r\n                </div>\r\n                <div>\r\n                    <input\r\n                        type=\"password\"\r\n                        value={password}\r\n                        onChange={(e) => setPassword(e.target.value)}\r\n                        placeholder=\"Password\"\r\n                        style={{ width: \"300px\" }}\r\n                        className=\"mt-3 pt-2 pb-2 pr-2 pl-2\"\r\n                        required\r\n                    />\r\n                </div>\r\n                <div>\r\n                    <button onClick={() => add()} className=\"btn btn-dark mt-3 mb-3\"> Login </button>\r\n                </div>\r\n                <h4> OR </h4>\r\n                <div>\r\n                    <Link to=\"/register\">\r\n                        <span\r\n                            className=\"btn btn-dark mt-3\">\r\n                            Register\r\n                        </span>\r\n                    </Link>\r\n                </div>\r\n                <div className=\"mt-3\">\r\n                    <p> {message} </p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Login;","import React, { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport Navbar from \"../components/Navbar\";\r\n\r\n\r\nconst Register = () => {\r\n\r\n    const [username, setUsername] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const [message, setMessage] = useState(\"\");\r\n\r\n    const add = async () => {\r\n        if(username===\"\" || password===\"\"){\r\n            setMessage(\"Username or password cannot be empty\");\r\n            return;\r\n        }\r\n        let data = {\r\n            username: username,\r\n            password: password\r\n        }\r\n        await axios.post(\"/users/register\", data)\r\n        .then( response => {\r\n            // console.log(response.data); \r\n            if(response.data.status===201){\r\n                window.location = \"/\";\r\n            }\r\n            else{\r\n                if(response.data.status===409){\r\n                    setMessage(\"Username is already registered\");\r\n                }\r\n                else{\r\n                    setMessage(\"Incorrect username or password\");\r\n                }\r\n            }\r\n        })\r\n        .catch( err => {\r\n            console.log(err); ///////////////\r\n            setMessage(\"Incorrect username or password\");\r\n        })\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Navbar />\r\n            <div className=\"text-center up user-container\">\r\n                <h2 className=\"mt-5\"> Register Your Account </h2>\r\n                <div>\r\n                    <input\r\n                        type=\"email\"\r\n                        value={username}\r\n                        onChange={(e) => setUsername(e.target.value)}\r\n                        placeholder=\"Username\"\r\n                        autoComplete=\"off\"\r\n                        style={{ width: \"300px\" }}\r\n                        className=\"mt-3 pt-2 pb-2 pr-2 pl-2\"\r\n                        required\r\n                    />\r\n                </div>\r\n                <div>\r\n                    <input\r\n                        type=\"password\"\r\n                        value={password}\r\n                        onChange={(e) => setPassword(e.target.value)}\r\n                        placeholder=\"Password\"\r\n                        style={{ width: \"300px\" }}\r\n                        className=\"mt-3 pt-2 pb-2 pr-2 pl-2\"\r\n                        required\r\n                    />\r\n                </div>\r\n                <div>\r\n                    <button onClick={() => add()} className=\"btn btn-dark mt-3 mb-3\"> Register </button>\r\n                </div>\r\n                <h4> OR </h4>\r\n                <div>\r\n                    <Link to=\"/login\">\r\n                        <span\r\n                            className=\"btn btn-dark mt-3\">\r\n                            Login\r\n                        </span>\r\n                    </Link>\r\n                </div>\r\n                <div className=\"mt-3\">\r\n                    <p> {message} </p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Register;","import React, { useState } from \"react\";\r\nimport { Input, Button, Typography } from '@material-ui/core';\r\n\r\nconst Comment = (props) => {\r\n    const [editClicked, setEditClicked] = useState(false);\r\n    const [replyClicked, setReplyClicked] = useState(false);\r\n    const [replyInput, setReplyInput] = useState(\"\");\r\n    const [editInput, setEditInput] = useState(\"\");\r\n\r\n    const editComment = (commentText) => {\r\n        setEditClicked(true);\r\n        setEditInput(commentText);\r\n    }\r\n\r\n    const saveEdit = (comment) => {\r\n        let data = {\r\n            id: comment._id,\r\n            commentText: editInput\r\n        };\r\n        props.updateComment(data);\r\n        setEditClicked(false);\r\n        setEditInput(\"\");\r\n    }\r\n    \r\n    const typeEdit = (e) => {\r\n        setEditInput(e.target.value);\r\n    }\r\n\r\n    const cancelEdit = () => {\r\n        setEditClicked(false);\r\n        setEditInput(\"\");\r\n    }\r\n\r\n    const replyToComment = () => {\r\n        setReplyClicked(true);\r\n    }    \r\n\r\n    const typeReply = (e) => {\r\n        setReplyInput(e.target.value);\r\n    }\r\n\r\n    const cancelReply = () => {\r\n        setReplyClicked(false);\r\n        setReplyInput(\"\");\r\n    }\r\n\r\n    const replySumbit = (parentComment) => {\r\n        props.addComment(true, parentComment, replyInput);\r\n        setReplyClicked(false);\r\n        setReplyInput(\"\");\r\n    }\r\n\r\n    let comment = props.commentData;\r\n    const date = new Date(comment.postedDate).toLocaleString();\r\n    const replyActionsStyle = {backgroundColor: '#ff0050', margin: \"5px 0 0 5px\", lineHeight: \"1\", color: \"#000000\", marginBottom: \"0.5rem\"};\r\n    const marginleft = (comment.depth-1)*10+'%';\r\n    return (\r\n        <div className='single-comment' style={{marginLeft: marginleft}}>\r\n                <div className=\"comment-header\">\r\n                <Typography style={{float: \"left\", color: \"#999999\"}} variant=\"body1\" component=\"p\">\r\n                    {comment.author.name}:\r\n                </Typography>\r\n                <Typography style={{float: \"right\", color: \"#999999\"}} variant=\"body1\" component=\"p\">\r\n                    {date}\r\n                </Typography>\r\n                </div>\r\n                <div className=\"comment-content\">\r\n                    {editClicked ? \r\n                        <Input \r\n                            value={editInput} \r\n                            multiline rowsMin=\"1\" maxRows=\"3\" \r\n                            placeholder=\"Type your comment...\" \r\n                            style={{width: \"100%\", color: \"white\"}} \r\n                            onChange={typeEdit}/>\r\n                        :\r\n                        <Typography className=\"comment-text\" variant=\"body1\" component=\"p\">\r\n                            {comment.commentText}\r\n                        </Typography>\r\n                    }\r\n                    <div className=\"comment-actions\">\r\n                        {props.isLogged && comment.author.id === props.userData.id ?\r\n                            <Button\r\n                                size=\"small\"\r\n                                color=\"primary\"\r\n                                variant=\"contained\"\r\n                                style={{backgroundColor: '#ff0050', color: \"#000000\"}}\r\n                                onClick={editClicked ? () => saveEdit(comment) : () => editComment(comment.commentText)}\r\n                            >\r\n                                {editClicked ? \"Save\" : \"Edit\"}\r\n                            </Button> : ''\r\n                        }\r\n                        <Button\r\n                            size=\"small\"\r\n                            disabled={comment.depth > (editClicked ? 6 : 5)}\r\n                            color=\"primary\"\r\n                            variant=\"contained\"\r\n                            style={{backgroundColor: '#ff0050', color: \"#000000\"}}\r\n                            onClick={editClicked ? cancelEdit : replyToComment}\r\n                        >\r\n                            {editClicked ? \"Cancel\" : \"Reply\"}\r\n                        </Button>\r\n                    </div>\r\n                </div>\r\n                {replyClicked ? \r\n                <div className=\"reply-input\">\r\n                    <Input \r\n                        value={replyInput} \r\n                        multiline rowsMin=\"1\" maxRows=\"3\" \r\n                        disabled={!props.isLogged} \r\n                        placeholder={!props.isLogged ? \"Login to comment\" : \"Type your reply...\"} \r\n                        style={{width: \"100%\", color: \"white\"}} \r\n                        onChange={typeReply}/>\r\n                    <div className=\"comment-action\">\r\n                        <Button \r\n                            disabled={!props.isLogged} \r\n                            size=\"small\" color=\"primary\" \r\n                            variant=\"contained\" \r\n                            style={replyActionsStyle} \r\n                            onClick={() => replySumbit(comment)}>\r\n                            Submit\r\n                        </Button>\r\n                        <Button \r\n                            size=\"small\" color=\"primary\" \r\n                            variant=\"contained\" \r\n                            style={replyActionsStyle} \r\n                            onClick={cancelReply}>\r\n                            Cancel\r\n                        </Button>\r\n                    </div>\r\n                </div> : \"\"}\r\n            </div>\r\n    )\r\n}\r\n\r\nexport default Comment;","import React, { useState, useEffect } from \"react\";\r\nimport { Card, CardHeader, CardContent, CardActions, Collapse, IconButton, Typography } from '@material-ui/core';\r\nimport { Input, Button } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport clsx from 'clsx';\r\n\r\nimport axios from \"axios\";\r\nimport Navbar from \"../components/Navbar\";\r\nimport Comment from \"../components/Comment\";\r\n\r\nconst dummyPost = \"This is a dummy post. First Register as a new user or login in your existing account to add comments or replies. Once logged in you can also edit comments and replies added by you. You will remain logged in for maximum 3 hours after which cookie containing your auth tokwn will expire. I have implemented Deapth First Traversal Graph algorithm to get comments from MongoDB and render in React component. Have fun :)\"\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        maxWidth: \"100%\",\r\n        backgroundColor: \"#181818\",\r\n        color: \"white\"\r\n    },\r\n    expand: {\r\n        transform: 'rotate(0deg)',\r\n        marginLeft: 'auto',\r\n        transition: theme.transitions.create('transform', {\r\n            duration: theme.transitions.duration.shortest,\r\n        }),\r\n    }\r\n}));\r\n\r\nconst Post = () => {\r\n    const classes = useStyles();\r\n    const [expanded, setExpanded] = React.useState(false);\r\n    const handleExpandClick = () => {\r\n        setExpanded(!expanded);\r\n    };\r\n\r\n    const [comments, setComments] = useState([]);\r\n    const [isLogged, setIsLogged] = useState(false);\r\n    const [userData, setUserData] = useState({});\r\n    const [commentInput, setCommentInput] = useState(\"\");\r\n\r\n    const getComments = async (threads) => {\r\n        const DFS = (thread, commentsArray) => {\r\n            var comment = {\r\n                _id: thread._id,\r\n                author: {\r\n                    id: thread.author.id,\r\n                    name: thread.author.name\r\n                },\r\n                commentText: thread.commentText,\r\n                depth: thread.depth,\r\n                parentId: thread.parentId,\r\n                postedDate: thread.postedDate\r\n            }\r\n            commentsArray.push(comment);\r\n\r\n            for(var child in thread.children){\r\n                DFS(thread.children[child], commentsArray);\r\n            }\r\n        }\r\n        var commentsArray = [];\r\n        for(var baseComments in threads){\r\n            DFS(threads[baseComments], commentsArray);\r\n        }\r\n        setComments(commentsArray);\r\n        setCommentInput(\"\");\r\n    }\r\n\r\n    useEffect(() => {\r\n        const getData = async() => {\r\n            await axios.get(\"/comments/get\")\r\n            .then( response => {\r\n                // console.log(response.data); \r\n                setUserData(response.data.user);\r\n                response.data.user===null ? setIsLogged(false) : setIsLogged(true);\r\n                getComments(response.data.comments);\r\n            })\r\n            .catch(err => {\r\n                console.log(err); ////////////\r\n            })\r\n        }\r\n        getData();\r\n    }, [])\r\n\r\n    const typeComment = (e) => {\r\n        setCommentInput(e.target.value);\r\n    }\r\n\r\n    const addComment = async (isReplyComment=false, parentComment=null, commentText=null) => {\r\n        if (isReplyComment === false && commentInput === \"\") {\r\n            return;\r\n        }\r\n        if (isReplyComment && commentText === \"\") {\r\n            return;\r\n        }\r\n        let data = {\r\n            id: userData.id,\r\n            name: userData.name,\r\n            commentText: isReplyComment ? commentText : commentInput\r\n        }\r\n        if(isReplyComment){\r\n            data.parentId = parentComment._id;\r\n            data.depth = parentComment.depth+1;\r\n        }\r\n        // console.log(data); \r\n\r\n        await axios.post(\"/comments/add\", data)\r\n        .then( response => {\r\n            // console.log(response.data); \r\n            setUserData(response.data.user);\r\n            response.data.user===null ? setIsLogged(false) : setIsLogged(true);\r\n            getComments(response.data.comments);\r\n        })\r\n        .catch( err => {\r\n            console.log(err); ////////////\r\n        })\r\n    }\r\n\r\n    const updateComment = async (data) => {\r\n        await axios.post(\"/comments/edit\", data)\r\n        .then( response => {\r\n            // console.log(response.data); \r\n            setUserData(response.data.user);\r\n            response.data.user===null ? setIsLogged(false) : setIsLogged(true);\r\n            getComments(response.data.comments);\r\n        })\r\n        .catch( err => {\r\n            console.log(err); ////////////\r\n        })\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Navbar/>\r\n            <Card className={classes.root}>\r\n                <CardHeader\r\n                    className=\"text-center\"\r\n                    title=\"Dummy Post. Please Login to comment\"\r\n                />\r\n                <CardContent className=\"text-center\">\r\n                    <Typography variant=\"h6\" component=\"p\">\r\n                        {dummyPost}\r\n                    </Typography>\r\n                </CardContent>\r\n                <CardActions disableSpacing>\r\n                    <IconButton\r\n                        className={clsx(classes.expand, {\r\n                            [classes.expandOpen]: expanded,\r\n                        })}\r\n                        onClick={handleExpandClick}\r\n                        aria-expanded={expanded}\r\n                        aria-label=\"show more\"\r\n                    >\r\n                        <Typography style={{color: \"#999999\"}} variant=\"body1\" component=\"p\">Comments</Typography>\r\n                    </IconButton>\r\n                </CardActions>\r\n                <Collapse in={expanded} timeout=\"auto\" unmountOnExit>\r\n                    <CardContent>\r\n                        <div>\r\n                            <Input \r\n                                value={commentInput} \r\n                                disabled={!isLogged} \r\n                                multiline rowsMin=\"1\" maxRows=\"3\" \r\n                                placeholder={!isLogged ? \"Login to comment\" : \"Type your comment...\"} \r\n                                style={{width: \"100%\", color: \"white\"}} \r\n                                onChange={typeComment}/>\r\n                            <Button \r\n                                size=\"small\"\r\n                                disabled={!isLogged}\r\n                                color=\"primary\"\r\n                                variant=\"contained\"\r\n                                style={{backgroundColor: '#ff0050', marginTop: \"1%\", color:\"black\"}}\r\n                                onClick={()=>addComment(false,null,null)}\r\n                                >\r\n                                Submit\r\n                            </Button>\r\n                        </div>\r\n                        <div>\r\n                            {comments.map( (comment, index) => (\r\n                                <Comment\r\n                                    key={index}\r\n                                    id={comment._id}\r\n                                    addComment = {addComment}\r\n                                    updateComment = {updateComment}\r\n                                    commentData = {comment}\r\n                                    userData = {userData}\r\n                                    isLogged = {isLogged}\r\n                                />\r\n                            ))}\r\n                        </div>\r\n                    </CardContent>\r\n                </Collapse>\r\n            </Card>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Post;\r\n","import React from \"react\";\r\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\r\nimport Login from \"./pages/Login\";\r\nimport Register from \"./pages/Register\";\r\nimport Post from \"./pages/Post\";\r\n\r\nconst App = () => {\r\n  return (\r\n    <Router>\r\n      <Switch>\r\n        <Route exact path = \"/\" component = {Post} />\r\n        <Route exact path = \"/login\" component = {Login} />\r\n        <Route exact path = \"/register\" component = {Register} />\r\n      </Switch>\r\n    </Router>\r\n  );\r\n}\r\nexport default App;","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { createTheme, ThemeProvider } from \"@material-ui/core/styles\";\r\nimport App from \"./App\";\r\n\r\nconst theme = createTheme({\r\n    typography: {\r\n        fontFamily: ['\"Montserrat Alternates\"','sans-serif'].join(\",\")\r\n    }\r\n})\r\n\r\nReactDOM.render(\r\n    <ThemeProvider theme={theme}>\r\n        <App/>\r\n    </ThemeProvider>, \r\n    document.getElementById(\"root\")\r\n);"],"sourceRoot":""}